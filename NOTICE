----
nunif/optim/lion.py
From Google Brain AutoML: https://github.com/google/automl/blob/master/lion/lion_pytorch.py
Google Research / Apache License, Version 2.0

----
nunif/training/weight_decay_config.py
From nanoGPT: https://github.com/karpathy/nanoGPT/blob/master/model.py
Andrej Karpathy / MIT License

----
nunif/waifu2x/docs/images/miku_128.png
Hatsune Miku / Crypton Future Media inc. / CC BY-NC
https://piapro.net/intl/en_for_creators.html

----
nunif/utils/perlin2d.py
The original code is perlin-numpy: https://github.com/pvigier/perlin-numpy
Pierre Vigier / MIT License
Vadim Kantorov ported to pytorch: https://gist.github.com/vadimkantorov/ac1b097753f217c5c11bc2ff396e0a57

----
nunif/training/env.py
The adaptive weight calculation for the two different losses(GAN and others) is from Taming Transformers.
https://github.com/CompVis/taming-transformers

----
nunif/module/_lpips_1.pth
is trained with the internal forked version of LPIPS.
https://github.com/richzhang/PerceptualSimilarity

----
Other libraries used are listed in `requirements.txt`.
